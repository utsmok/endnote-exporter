on:
  push:
    tags:
      - 'v*' # Trigger on version tags

jobs:
  build-and-release:
    permissions:
      contents: write 

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    runs-on: ${{ matrix.os }} 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Set executable name based on OS
        id: set-name
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "EXECUTABLE_NAME=endnote-exporter.exe" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "EXECUTABLE_NAME=endnote-exporter" >> $GITHUB_ENV
          else
            echo "EXECUTABLE_NAME=endnote-exporter" >> $GITHUB_ENV
          fi

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --windowed --name "${{ env.EXECUTABLE_NAME }}" endnote_exporter.py

      - name: Package macOS App
        if: runner.os == 'macOS'
        run: |
          ditto -c -k --sequesterRsrc --keepParent "dist/${{ env.EXECUTABLE_NAME }}.app" "dist/${{ env.EXECUTABLE_NAME }}.zip"
          echo "ARCHIVE_NAME=${{ env.EXECUTABLE_NAME }}.zip" >> $GITHUB_ENV

      - name: Set Final Asset Path
        id: set-asset-path
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "ASSET_PATH=dist/${{ env.ARCHIVE_NAME }}" >> $GITHUB_ENV
          else
            echo "ASSET_PATH=dist/${{ env.EXECUTABLE_NAME }}" >> $GITHUB_ENV
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          files: ${{ env.ASSET_PATH }}
